# This is the configuration file for the etcd server.

# Human-readable name for this member.
name: '{{ansible_hostname}}'

# Path to the data directory.
data-dir: {{etcd_data_dir}}

# Path to the dedicated wal directory.
wal-dir: 

# Number of committed transactions to trigger a snapshot to disk.
snapshot-count: 10000

# Time (in milliseconds) of a heartbeat interval.
heartbeat-interval: 100

# Time (in milliseconds) for an election to timeout.
election-timeout: 1000

# Raise alarms when backend size exceeds the given quota. 0 means use the
# default quota.
quota-backend-bytes: 0

{% if etcd_iface_public == 'all' %}
{% set client_endpoints = [ etcd_listen_public ] %}
{% else %}
{% set client_endpoints = [ etcd_listen_public, '127.0.0.1' ] %}
{% endif %}


# List of comma separated URLs to listen on for peer traffic.


# List of comma separated URLs to listen on for client traffic.
listen-client-urls: {{ client_endpoints | map('regex_replace', '^(.+)$', etcd_scheme ~ '\\1' ~ ':' ~ etcd_port_client) | join(',') }}

# Maximum number of snapshot files to retain (0 is unlimited).
max-snapshots: 5

# Maximum number of wal files to retain (0 is unlimited).
max-wals: 5

# Comma-separated white list of origins for CORS (cross-origin resource sharing).
cors:

# List of this member's peer URLs to advertise to the rest of the cluster.
# The URLs needed to be a comma-separated list.

# List of this member's client URLs to advertise to the public.
# The URLs needed to be a comma-separated list.

# Discovery URL used to bootstrap the cluster.
discovery:

# Valid values include 'exit', 'proxy'
discovery-fallback: 'proxy'

# HTTP proxy to use for traffic to discovery service.
discovery-proxy:

# DNS domain used to bootstrap initial cluster.
discovery-srv:

# [cluster]
{% if inventory_hostname in groups['etcd'] %}
listen-peer-urls: {{etcd_scheme}}{{etcd_listen_cluster}}:{{etcd_port_peer}}
advertise-client-urls: {{etcd_scheme}}{{etcd_address_public}}:{{etcd_port_client}}
initial-advertise-peer-urls: {{etcd_scheme}}{{etcd_address_cluster}}:{{etcd_port_peer}}
{% endif %}


# Initial cluster configuration for bootstrapping.
initial-cluster: {{etcd_cluster}}

# Initial cluster token for the etcd cluster during bootstrap.
initial-cluster-token: '{{etcd_initial_cluster_token}}'

# Initial cluster state ('new' or 'existing').
initial-cluster-state: 'new'

# Reject reconfiguration requests that would cause quorum loss.
strict-reconfig-check: false

# Accept etcd V2 client requests
enable-v2: {{etcd_enable_v2}}

# Enable runtime profiling data via HTTP server
enable-pprof: true

# Valid values include 'on', 'readonly', 'off'
{% if inventory_hostname not in groups['etcd'] %}
proxy: 'on'
{% endif %}

# Time (in milliseconds) an endpoint will be held in a failed state.
proxy-failure-wait: 5000

# Time (in milliseconds) of the endpoints refresh interval.
proxy-refresh-interval: 30000

# Time (in milliseconds) for a dial to timeout.
proxy-dial-timeout: 1000

# Time (in milliseconds) for a write to timeout.
proxy-write-timeout: 5000

# Time (in milliseconds) for a read to timeout.
proxy-read-timeout: 0

client-transport-security:
{% if etcd_secure %}
  # Path to the client server TLS cert file.
  cert-file: {{etcd_pki_cert_dest}}

  # Path to the client server TLS key file.
  key-file: {{etcd_pki_key_dest}}

  # Enable client cert authentication.
  client-cert-auth: false

  # Path to the client server TLS trusted CA cert file.
  trusted-ca-file: {{etcd_pki_ca_cert_dest}}

  # Client TLS using generated certificates
  auto-tls: false

peer-transport-security:
  # Path to the peer server TLS cert file.
  cert-file: {{etcd_pki_cert_dest}}

  # Path to the peer server TLS key file.
  key-file: {{etcd_pki_key_dest}}

  # Enable peer client cert authentication.
  client-cert-auth: false

  # Path to the peer server TLS trusted CA cert file.
  trusted-ca-file: {{etcd_pki_ca_cert_dest}}

  # Peer TLS using generated certificates.
  auto-tls: false
{% endif %}
# Enable debug-level logging for etcd.
log-level: debug

logger: zap

# Specify 'stdout' or 'stderr' to skip journald logging even when running under systemd.
log-outputs: [stderr]

# Force to create a new one member cluster.
force-new-cluster: false

auto-compaction-mode: periodic
auto-compaction-retention: "1"
# [custom_env_vars]
{% for k, v in etcd_additional_envvars.items() %}
{{k}}="{{v}}"
{% endfor %}

